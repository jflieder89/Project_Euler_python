"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
"""

def fiboEvenSum(n):
    lst = [1, 2] #start of the list as outlined in the prompt
    while lst[-1] + lst[-2] <= n: #as long as the next potential fib number wouldn't exceed the inputted parameter
        lst.append(lst[-1] + lst[-2]) # put in the next fib number

    lst_evens = [] #make a new list to be filled with only evens
    for i in lst: #iterate through the listed fib numbers
        if i % 2 == 0: #if it's even
            lst_evens.append(i)
    return sum(lst_evens)



print(fiboEvenSum(4000000))
